{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\PodridaContador\\\\src\\\\screens\\\\Game.js\",\n    _s = $RefreshSig$();\n\n// Global Imports\nimport React, { useState, useEffect, useRef } from 'react'; // Component Imports\n\nimport Footer from '../components/Footer'; // Style Imports\n\nimport '../styles/Globals.module.css';\nimport ScreenStyles from '../styles/Players.module.css';\nimport GameStyles from '../styles/Game.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Game = () => {\n  _s();\n\n  const [players, setPlayers] = useState([]);\n  const [shufflerIndex, setShufflerIndex] = useState(0);\n  const [isScoreVisible, setIsScoreVisible] = useState(false);\n  const shufflerRef = useRef(null); // Use Effect call to retrieve players\n\n  useEffect(() => {\n    const data = window.localStorage.getItem('players');\n    setPlayers(JSON.parse(data));\n  }, []); // Function to start a new game\n\n  const startNewGame = () => {\n    const isNewGame = window.confirm('¿Seguro que deseas comenzar un nuevo partido? Perderás la información guardada hasta el momento.');\n\n    if (isNewGame) {\n      window.localStorage.removeItem('players');\n      window.location.href = '/';\n    }\n  }; // Function to add points\n\n\n  const addPoints = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setPlayers(prev => prev.map(selectedPlayer => {\n      if (selectedPlayer.name === name) {\n        return {\n          name: selectedPlayer.name,\n          points: parseInt(selectedPlayer.points) + parseInt(value)\n        };\n      }\n\n      return selectedPlayer;\n    }));\n  }; // Function to save the data to localStorage\n\n\n  const updatePlayers = e => {\n    e.preventDefault();\n    window.localStorage.setItem('players', JSON.stringify(players));\n    e.target.reset();\n    setIsScoreVisible(false); // To determine who shuffled and who should be next\n\n    const previousShuffler = parseInt(shufflerRef.current.dataset.index); // If the index matches an existing user, we set the shuffler to be that player\n\n    const shuffler = players.filter((player, index) => index === previousShuffler + 1);\n\n    if (shuffler.length === 1) {\n      setShufflerIndex(previousShuffler + 1);\n    } else {\n      // If not, we set it to the first player again\n      setShufflerIndex(0);\n    }\n\n    ; // Then we check the score\n\n    checkScore();\n  }; // Function to reduce score by ten\n\n\n  const reducePointsByTen = e => {\n    e.preventDefault();\n    const previousElement = e.target.previousElementSibling; // Simulate focus and blur events to trigger the change\n\n    previousElement.focus();\n    previousElement.value = -10;\n    previousElement.blur();\n  }; // Function to check if the score reached 100\n\n\n  const checkScore = () => {\n    // Check if any of the players reached 100 points\n    players.map(player => {\n      if (player.points >= 100) {\n        // If so, we check how many players are currently in the game\n        if (players.length > 2) {\n          // If we have more than 2, we delete the player that lost, and carry on\n          const isPlayerEliminated = window.confirm(`El jugador ${player.name} ha perdido! Seguir jugando?`);\n\n          if (isPlayerEliminated) {\n            removePlayer(player);\n          } else {\n            // If they didn't want to keep playing\n            window.localStorage.removeItem('players');\n            window.location.href = '/';\n          }\n        } else {\n          // If we only have 2, show an alert and trigger a new game\n          const isGameFinished = window.confirm(`El jugador ${player.name} ha perdido! Jugar la revancha?`);\n\n          if (isGameFinished) {\n            // Reset points\n            setPlayers(prev => prev.map(selectedPlayer => {\n              return {\n                name: selectedPlayer.name,\n                points: 0\n              };\n            }));\n          } else {\n            // If they didn't want to play a new game\n            window.localStorage.removeItem('players');\n            window.location.href = '/';\n          }\n        }\n      }\n\n      return players;\n    });\n  }; // Function to delete a player\n\n\n  const removePlayer = deletedPlayer => {\n    const filteredArray = players.filter(player => player !== deletedPlayer);\n    setPlayers(filteredArray);\n  }; // Function to run when someone does chinchon\n\n\n  const setWinner = e => {\n    e.preventDefault(); // Get the winner\n\n    const winner = e.target.dataset.player;\n    const isGameFinished = window.confirm(`El jugador ${winner} ha ganado! Jugar la revancha?`);\n\n    if (isGameFinished) {\n      // Reset points\n      setPlayers(prev => prev.map(selectedPlayer => {\n        return {\n          name: selectedPlayer.name,\n          points: 0\n        };\n      }));\n      setIsScoreVisible(false);\n    } else {\n      // If they didn't want to play a new game\n      window.localStorage.removeItem('players');\n      window.location.href = '/';\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: ScreenStyles.Container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: ScreenStyles.TitleContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: ScreenStyles.Icon,\n          children: \"\\uD83C\\uDCCF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: ScreenStyles.Title,\n          children: \"Chinch\\xF3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: ScreenStyles.Subtitle,\n          children: \"Anotador\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: ScreenStyles.PlayersContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Puntaje:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: players && players.map((player, key) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: player.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this), shufflerIndex === key && /*#__PURE__*/_jsxDEV(\"h4\", {\n              ref: shufflerRef,\n              \"data-index\": key,\n              children: \"Baraja\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 43\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [player.points, \" Puntos\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 54\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), isScoreVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${GameStyles.ModalWindow}`,\n        \"data-container\": \"modal\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${ScreenStyles.FormContainer} ${GameStyles.FormContainer}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: GameStyles.ModalTitleContainer,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: ScreenStyles.Subtitle,\n              children: \"Anotar Puntos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setIsScoreVisible(false),\n              className: GameStyles.CloseModalButton,\n              children: \"X\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: updatePlayers,\n            children: [players.map((player, key) => /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: player.name,\n                children: [\"\\xBFCu\\xE1ntos puntos sum\\xF3 \", player.name, \"?\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                name: player.name,\n                onBlur: addPoints,\n                defaultValue: \"0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: reducePointsByTen,\n                \"data-player\": player.name,\n                className: GameStyles.Secondary,\n                children: \"\\u2B50 -10\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: setWinner,\n                \"data-player\": player.name,\n                className: GameStyles.Primary,\n                children: \"\\uD83D\\uDCAF Chinch\\xF3n\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 21\n              }, this)]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              value: \"Anotar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: GameStyles.ActionsContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsScoreVisible(true),\n          className: GameStyles.AddScoreButton,\n          children: \"Anotar Puntos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startNewGame,\n          className: GameStyles.NewGameButton,\n          children: \"Nuevo Juego\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Game, \"WZGYfHonc/uEXRyvQXjwEnKdE0Y=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["C:/xampp/htdocs/PodridaContador/src/screens/Game.js"],"names":["React","useState","useEffect","useRef","Footer","ScreenStyles","GameStyles","Game","players","setPlayers","shufflerIndex","setShufflerIndex","isScoreVisible","setIsScoreVisible","shufflerRef","data","window","localStorage","getItem","JSON","parse","startNewGame","isNewGame","confirm","removeItem","location","href","addPoints","e","name","target","value","prev","map","selectedPlayer","points","parseInt","updatePlayers","preventDefault","setItem","stringify","reset","previousShuffler","current","dataset","index","shuffler","filter","player","length","checkScore","reducePointsByTen","previousElement","previousElementSibling","focus","blur","isPlayerEliminated","removePlayer","isGameFinished","deletedPlayer","filteredArray","setWinner","winner","Container","TitleContainer","Icon","Title","Subtitle","PlayersContainer","key","ModalWindow","FormContainer","ModalTitleContainer","CloseModalButton","Secondary","Primary","ActionsContainer","AddScoreButton","NewGameButton"],"mappings":"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","sourcesContent":["// Global Imports\r\nimport React, { useState, useEffect, useRef } from 'react';\r\n\r\n// Component Imports\r\nimport Footer from '../components/Footer';\r\n\r\n// Style Imports\r\nimport '../styles/Globals.module.css';\r\nimport ScreenStyles from '../styles/Players.module.css';\r\nimport GameStyles from '../styles/Game.module.css';\r\n\r\nconst Game = () => {\r\n  const [players, setPlayers] = useState([]);\r\n  const [shufflerIndex, setShufflerIndex] = useState(0);\r\n  const [isScoreVisible, setIsScoreVisible] = useState(false);\r\n  const shufflerRef = useRef(null);\r\n\r\n  // Use Effect call to retrieve players\r\n  useEffect(() => {\r\n    const data = window.localStorage.getItem('players');\r\n    setPlayers(JSON.parse(data));\r\n  }, []);\r\n\r\n  // Function to start a new game\r\n  const startNewGame = () => {\r\n    const isNewGame = window.confirm('¿Seguro que deseas comenzar un nuevo partido? Perderás la información guardada hasta el momento.');\r\n\r\n    if(isNewGame) {\r\n      window.localStorage.removeItem('players');\r\n      window.location.href = '/';\r\n    }\r\n  }\r\n\r\n  // Function to add points\r\n  const addPoints = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    \r\n    setPlayers(prev => prev.map(selectedPlayer => {\r\n      if(selectedPlayer.name === name) {\r\n        return {\r\n          name: selectedPlayer.name,\r\n          points: parseInt(selectedPlayer.points) + parseInt(value)\r\n        }\r\n      }\r\n\r\n      return selectedPlayer;\r\n    }));\r\n  }\r\n\r\n  // Function to save the data to localStorage\r\n  const updatePlayers = (e) => {\r\n    e.preventDefault();\r\n\r\n    window.localStorage.setItem('players', JSON.stringify(players));\r\n    e.target.reset();\r\n    setIsScoreVisible(false);\r\n\r\n    // To determine who shuffled and who should be next\r\n    const previousShuffler = parseInt(shufflerRef.current.dataset.index);\r\n\r\n    // If the index matches an existing user, we set the shuffler to be that player\r\n    const shuffler = players.filter((player, index) => index === previousShuffler + 1);\r\n    if(shuffler.length === 1) {\r\n      setShufflerIndex(previousShuffler + 1);\r\n    } else {\r\n      // If not, we set it to the first player again\r\n      setShufflerIndex(0);\r\n    };\r\n\r\n    // Then we check the score\r\n    checkScore();\r\n  }\r\n\r\n  // Function to reduce score by ten\r\n  const reducePointsByTen = (e) => {\r\n    e.preventDefault();\r\n    \r\n    const previousElement = e.target.previousElementSibling;\r\n    // Simulate focus and blur events to trigger the change\r\n    previousElement.focus();\r\n    previousElement.value = -10;\r\n    previousElement.blur();\r\n  }\r\n\r\n  // Function to check if the score reached 100\r\n  const checkScore = () => {\r\n\r\n    // Check if any of the players reached 100 points\r\n    players.map((player) => {\r\n      if(player.points >= 100) {\r\n        // If so, we check how many players are currently in the game\r\n        if(players.length > 2) {\r\n          // If we have more than 2, we delete the player that lost, and carry on\r\n          const isPlayerEliminated = window.confirm(`El jugador ${player.name} ha perdido! Seguir jugando?`)\r\n\r\n          if(isPlayerEliminated) {\r\n            removePlayer(player);\r\n          } else {\r\n            // If they didn't want to keep playing\r\n            window.localStorage.removeItem('players');\r\n            window.location.href = '/';\r\n          }\r\n        } else {\r\n          // If we only have 2, show an alert and trigger a new game\r\n          const isGameFinished = window.confirm(`El jugador ${player.name} ha perdido! Jugar la revancha?`)\r\n          \r\n          if(isGameFinished) {\r\n            // Reset points\r\n            setPlayers(prev => prev.map(selectedPlayer => {\r\n              return {\r\n                name: selectedPlayer.name,\r\n                points: 0\r\n              }\r\n            }));\r\n          } else {\r\n            // If they didn't want to play a new game\r\n            window.localStorage.removeItem('players');\r\n            window.location.href = '/';\r\n          }\r\n        }\r\n      }\r\n      return players;\r\n    });\r\n  }\r\n\r\n  // Function to delete a player\r\n  const removePlayer = (deletedPlayer) => {\r\n    const filteredArray = players.filter(player => player !== deletedPlayer);\r\n    setPlayers(filteredArray);\r\n  }\r\n\r\n  // Function to run when someone does chinchon\r\n  const setWinner = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Get the winner\r\n    const winner = e.target.dataset.player;\r\n    const isGameFinished = window.confirm(`El jugador ${winner} ha ganado! Jugar la revancha?`);\r\n\r\n    if(isGameFinished) {\r\n      // Reset points\r\n      setPlayers(prev => prev.map(selectedPlayer => {\r\n        return {\r\n          name: selectedPlayer.name,\r\n          points: 0\r\n        }\r\n      }));\r\n      \r\n      setIsScoreVisible(false);\r\n    } else {\r\n      // If they didn't want to play a new game\r\n      window.localStorage.removeItem('players');\r\n      window.location.href = '/';\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <section className={ScreenStyles.Container}>\r\n        <div className={ScreenStyles.TitleContainer}>\r\n          <span className={ScreenStyles.Icon}>🃏</span>\r\n          <h1 className={ScreenStyles.Title}>\r\n            Chinch&oacute;n\r\n          </h1>\r\n          <span className={ScreenStyles.Subtitle}>Anotador</span>\r\n        </div>\r\n        <div className={ScreenStyles.PlayersContainer}>\r\n          <h2>Puntaje:</h2>\r\n          <ul>\r\n            {players && players.map((player, key) => <li key={key}>\r\n                <h3>{player.name}</h3>\r\n                {shufflerIndex === key && <h4 ref={shufflerRef} data-index={key}>Baraja</h4>}\r\n                <p>{player.points} Puntos</p>\r\n              </li>\r\n            )}\r\n          </ul>\r\n        </div>\r\n        {isScoreVisible &&\r\n          <div className={`${GameStyles.ModalWindow}`} data-container=\"modal\">\r\n            <div className={`${ScreenStyles.FormContainer} ${GameStyles.FormContainer}`}>\r\n              <div className={GameStyles.ModalTitleContainer}>\r\n                <h3 className={ScreenStyles.Subtitle}>Anotar Puntos</h3>\r\n                <button onClick={() => setIsScoreVisible(false)} className={GameStyles.CloseModalButton}>X</button>\r\n              </div>\r\n              <form onSubmit={updatePlayers}>\r\n                {players.map((player, key) =>\r\n                  <fieldset key={key}>\r\n                    <label htmlFor={player.name}>¿Cu&aacute;ntos puntos sum&oacute; {player.name}?</label>\r\n                    <input type=\"number\" name={player.name} onBlur={addPoints} defaultValue=\"0\" />\r\n                    <button onClick={reducePointsByTen} data-player={player.name} className={GameStyles.Secondary}>⭐ -10</button>\r\n                    <button onClick={setWinner} data-player={player.name} className={GameStyles.Primary}>💯 Chinch&oacute;n</button>\r\n                  </fieldset>\r\n                )}\r\n                <input type=\"submit\" value=\"Anotar\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        }\r\n        <div className={GameStyles.ActionsContainer}>\r\n          <button onClick={() => setIsScoreVisible(true)} className={GameStyles.AddScoreButton}>Anotar Puntos</button>\r\n          <button onClick={startNewGame} className={GameStyles.NewGameButton}>Nuevo Juego</button>\r\n        </div>\r\n      </section>\r\n      <Footer />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Game;"]},"metadata":{},"sourceType":"module"}